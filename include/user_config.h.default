/*
Copyright © 2020 Dmytro Korniienko (kDn)
JeeUI2 lib used under MIT License Copyright (c) 2019 Marsel Akhkamov

    This file is part of FireLamp_JeeUI.

    FireLamp_JeeUI is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    FireLamp_JeeUI is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with FireLamp_JeeUI.  If not, see <https://www.gnu.org/licenses/>.

  (Этот файл — часть FireLamp_JeeUI.

   FireLamp_JeeUI - свободная программа: вы можете перераспространять ее и/или
   изменять ее на условиях Стандартной общественной лицензии GNU в том виде,
   в каком она была опубликована Фондом свободного программного обеспечения;
   либо версии 3 лицензии, либо (по вашему выбору) любой более поздней
   версии.

   FireLamp_JeeUI распространяется в надежде, что она будет полезной,
   но БЕЗО ВСЯКИХ ГАРАНТИЙ; даже без неявной гарантии ТОВАРНОГО ВИДА
   или ПРИГОДНОСТИ ДЛЯ ОПРЕДЕЛЕННЫХ ЦЕЛЕЙ. Подробнее см. в Стандартной
   общественной лицензии GNU.

   Вы должны были получить копию Стандартной общественной лицензии GNU
   вместе с этой программой. Если это не так, см.
   <https://www.gnu.org/licenses/>.)
*/

#ifndef __USER_CONFIG_H
#define __USER_CONFIG_H

// Все пользовательские настройки находятся здесь.
// В первую очередь будут использоваться настройки из этого файла
// В случае отсутствия какой-либо системной настройки в этом файле будет применено значение по-умолчанию из системного файла config.h

// Для того чтобы изменения в этом файле вступили в силу его необходимо
// СКОПИРОВАТЬ под именем user_config.h, в дальнейшем при обновлении репозитория (git pull, git reset, и т.п.)
// пользовательский файл с настройками user_config.h обновляться не будет

// Если что-то закомментировано, то будут использоваться настройки по-умолчанию из системного файла config.h
// Полезно для случаев, когда вы не знаете что за параметр и хотите оставить как есть, не меняя


/*

Рекоммендуемая таблица назначения выводов по-умолчанию
https://github.com/vortigont/FireLamp_JeeUI/wiki/%D0%9D%D0%B0%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B2%D1%8B%D0%B2%D0%BE%D0%B4%D0%BE%D0%B2


*/

//------------------------------ Основные Настройки
#define LANG_FILE                   "text_res-RUS.h"         // для других языков при компиляции менять постфикс файла "text_res-***.h". 
                                                             // Наличие нужного файла перевода смотреть в папке include в основной папке проекта 

//#define LAMP_DEBUG                                         // режим отладки, включает вывод отладочных сообщений в Serial порт

//------------------------------ Подключаемое дополнительное оборудование
//#define ENCODER                                             // Использовать Энкодер

//------------------------------ 


//------------------------------ Описание Оборудования (пины подключения, параметры и т.)
// настройки энкодера и поведения, если разрешен
#ifdef ENCODER
  #define ENC_SW                    (5)                        // Пин кнопки стандартного энкодера
  #define ENC_DT                    (14)                        // Пин DT энкодера
  #define ENC_CLK                   (15)                        // Пин CLK энкодера
  #define ENC_EXIT_TIMEOUT          (3U)                        // Таймаут выхода из настроек эффекта. Приблизительно равно (EXIT_TIMEOUT * 10 секунд)

// ----------------- Опциональные настройки (показаны по умолчанию, без надобности лучше не раскомментировать и не менять)
//#define EB_FAST                 (30)                        // таймаут быстрого поворота, мс
//#define EB_DEB                  (80)                        // дебаунс кнопки, мс
//#define EB_HOLD                 (1000)                      // таймаут удержания кнопки, мс
//#define EB_CLICK                (400)                       // таймаут накликивания, мс

/* ----------------- Тут можно настроить поведение по накликиванию кнопки энкодера.
  ВАЖНО! Один клик зарезервирован за функцией вкл\выкл лампу. Вы вольны установить любые значения в пределах 2-8, 
  но следите за тем, чтобы номера кликов не повторялись. Вы так же можете допускать пропуски между номерами, такие клики просто
  будут проигнорированы, не произойдет ничего. Так же, нужно иметь в виду, что если вы, к примеру, задали ENC_AUX_CLICK (7U), но
  AUX_PIN закомментирован, эта опция так же не возимеет действия. Это справедливо и для ENC_MIC_CLICK (нужно сконфигурировать микрофон)
*/ 
#define ENC_DEMO_CLICK            (2U)                        // Номер клика, на котором переключать режим ДЕМО
#define ENC_GBRI_CLICK            (3U)                        // Номер клика, на котором переключать Глобальная Яркость\Яркость
//#define ENC_MIC_CLICK           (4U)                        // Номер клика, на котором переключать Микрофон ON\OFF глобально
//#define ENC_IP_CLICK            (5U)                        // Номер клика, на котором происходит вывод IP лампы
//#define ENC_TIME_CLICK          (6U)                        // Номер клика, на котором происходит вывод текущего времени
//#define ENC_AUX_CLICK           (7U)                        // Номер клика, на котором переключать состояние AUX-реле

//#define ENC_STRING_EFFNUM_DELAY (17U)                       // Скорость вывода номера эффекта при вращении энкодера, меньше = быстрее
#endif

//#define MIC_PIN               (-1)                           // пин для микрофона
//#define MIC_POLLRATE          (100U)                         // как часто опрашиваем микрофон, мс
//#define FAST_ADC_READ                                        // микрофон, использовать полный диапазон звуковых частот, если закомментировано, то будет до 5кГц, но сэкономит память и проще обсчитать...
//#define SAMPLING_FREQ         (18000U*2U)




//------------------------------ Всякое разное
#define VERTGAUGE             (1U)                          // вертикальный/горизонтальный(1/0) индикатор, закомментировано - отключен (дефолтное поведение в config.h - отключен)

//#define SPEED_ADJ (float)NUM_LEDS/256                         // Без надобности не трогать! Поправка скорости риал-тайм эффектов относительно размеров метрицы.

// #define TEXT_OFFSET           (4U)                          // высота, на которой бежит текст (от низа матрицы)
// #define LET_SPACE             (1U)                          // пропуск между символами (кол-во пикселей)
// #define LETTER_COLOR          (CRGB::White)                 // цвет букв по умолчанию
// #define DEFAULT_TEXT_SPEED    (100U)                        // скорость движения текста, в миллисекундах - меньше == быстрее
#define FADETOBLACKVALUE      (222U)                        // степень затенения фона под текстом, до 255, чем больше число - тем больше затенение.
//------------------------------ 


//------------------------------  РАССВЕТ (устарело)
// #define DAWN_BRIGHT           (200U)                        // максимальная яркость рассвета (0-255)
// #define DAWN_TIMEOUT          (1U)                          // сколько рассвет светит после времени будильника, минут
#define PRINT_ALARM_TIME                                    // нужен ли вывод времени для будильника, если пустая строка в событии будильника (дефолтное поведение в config.h - вывод времени отключен)
//------------------------------ 

#endif
